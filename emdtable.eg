import "prelude.eg"

namespace Table (
    using System
    using List

    def widths =
        do transpose |> map (map String::count) |> map maximum |> map ((+) 2)

    def info =
        [(FF, TT) -> widths TT |> [WW -> (zip FF WW, TT)]]

    def render_line =
        do map [((F,W),T) -> format (" {:" + (String::from_chars F) + (to_text (W - 2)) + "} ") T] 
            |> reduce [W0 W1 -> W0 + "|" + W1] |> [T -> "    |" + T + "|"]

    def render =
        [(FF, TT) -> map (zip FF) TT |> map render_line |> reduce [T0 T1 -> T0 + "\n" +T1]]

    def hline =
        do map [(F, W) -> String::from_chars (repeat W '-')] |> reduce [T0 T1 -> T0 + "+" + T1] |> [T -> "    |" + T + "|"]

    def hrender =
        [(FF, TT) -> map (zip FF) TT |> map render_line |> [{X|XX} -> {X, hline FF|XX}] |> reduce [T0 T1 -> T0 + "\n" +T1]]

    def args =
        [FF TT -> (String::to_chars FF, map (map to_text) TT) 
        |TT -> (map [_ -> '^'] (head TT), (map (map to_text) TT))]

    def table = napp (do info |> render) args

    def htable = napp (do info |> hrender) args
)

def table = Table::table
def htable = Table::htable
